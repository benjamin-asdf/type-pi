{"version":3,"sources":["bennischwerdtner/typepi/firefly.cljs"],"mappings":";AAGA,0CAAA,kDAAAA,5FAAMM;AAAN,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;IAAAE,aAAA,AAAAC,4CAAAH,eAAA;QAAA,AAAAI,4CAAAF,WAAA,IAAA,/DACiBK;QADjB,AAAAH,4CAAAF,WAAA,IAAA,/DACmBM;UADnB,AAAAL,4CAAAH,eAAA,jEACWM;AADX,AAAA,0FAAA,mDAAA,2CAAA,ygCAAA,uDAAA,2CAAA,uDAAA,1mCAGW,uIAAA,6DAAA,mDAAA,2DAAA,kEAAA,kEAAA,qEAAA,yEAAA,6DAAA,mDAAA,2DAAA,kEAAA,kEAAA,qEAAA,v7BAACG,oEAAAA,gdAAAA,mlBAMMF,sDAAOC;;AAEzB,iDAAA,jDAAME,0GACHC,EAAEC;AADL,AAEE,IAAMC,wBAAgB,CAAG,iBAAAC,WAAU,AAAA,iFAAMH;IAAhBI,WACU,AAAA,qHACCH;AAFX,AAAA,wJAAAE,SAAAC,gEAAAD,SAAAC,lOAACC,yEAAAA,4FAAAA;OAAJ;AAAtB,AAIE,GAAMH;AAAN,AACE,CAACI,sFAAAA,wFAAAA;;AACD,GAAM,CAAA,QAAO,CAACC,oEAAAA,uEAAAA,LAAIP,oDAAAA;AAAlB,AACE,iKAAA,iCAAA,mEAAA,iCAAA,rSAACQ,iFAAAA,uHAAAA;;AADH;;AAEA,2GAAA,3GAACC,mDAAMC,uCAAOC,wEAAcC;;AAJ9B;;AAKA,IAAAC,WAAQb;IAARa,eAAA,oqBAAAA,lqBACE,EAAA,CAAA,6MAAA,kMAAA,vYAAO,sMAAA,rMAACN,oEAAAA,uEAAAA,2DAAAA,oEAAAA,uEAAAA,3MAAIP,oDAAAA,kJAAAA,oDAAAA,iBAAS,mJAAAa,SAAA,eAAA,4DAAAA,SAAA,eAAA,9PAACC,0EAAAA,uGAAAA;IADxBD,eAAA,0dAAAA,xdAEE,CAAA,SAAQ,CAACN,oEAAAA,uEAAAA,LAAIP,oDAAAA,MAAI,mJAAAa,aAAA,eAAA,4DAAAA,aAAA,eAAA,tQAACC,0EAAAA,2GAAAA;AAFpB,AAAA,GAGEZ;AAAgB,qDAAAW,aAAA,uDAAA,lHAACE;;AAHnBF;;;AAKJ,sDAAA,tDAAMG;AAAN,AAEE,CAACC,qFAAAA,uFAAAA;;AACD,iKAAA,WAAA,mEAAA,WAAA,zPAACT,iFAAAA,iGAAAA;;AACD,sHAAA,/GAACC,mDAAMS,2CAAWP,8EAEX,WAAKQ;AAAL,AACE,OAACC,6CAAKD,KACA,mDAAA,nDAACE,uDAEA;AAAA,AACE,IAAAC,WAAA,2CAAA,6DAAA,KAAA,wDAAA,2CAAA,4DAAA,mFAAA,+EAAA,yEAAA,MAAA,8SAAA,6DAAA,rgBAGqB,CAAA,MAAO,6CAAA,7CAACE,sMAEtB,+JAAA,4EAAA,1OAACC,gFAAAA,+FAAAA,2NACK,yIAAA,IAAA,0DAAA,IAAA,1MAACC,qEAAAA,iFAAAA,6DACD,yIAAA,QAAA,0DAAA,QAAA,lNAACA,qEAAAA,qFAAAA;AAPd,AAAA,8JAAAJ,mEAAAA,zNAACC,4EAAAA,sFAAAA","names":["p__40510","map__40511","cljs.core/--destructure-map","vec__40512","cljs.core.get","cljs.core.nth","bennischwerdtner.typepi.firefly/firefly","pos","x","y","bennischwerdtner.typepi.firefly/css","bennischwerdtner.typepi.firefly/update-firefly","e","state","reached-target?","G__40515","G__40516","bennischwerdtner.typepi.firefly/distance","bennischwerdtner.typepi.firefly/set-wobble-anim!","bennischwerdtner.typepi.firefly/age","bennischwerdtner.typepi.firefly/play-sound!","cljs.core.swap_BANG_","bennischwerdtner.typepi.firefly/points","cljs.core/update","cljs.core/inc","G__40517","bennischwerdtner.typepi.firefly/attracted","cljs.core.assoc","bennischwerdtner.typepi.firefly/spawn-firefly!","bennischwerdtner.typepi.firefly/set-blink-anim!","bennischwerdtner.typepi.firefly/game-state","ents","cljs.core.into","cljs.core.repeatedly","G__40518","bennischwerdtner.typepi.firefly/->entity","cljs.core.rand","bennischwerdtner.typepi.firefly/rand-on-element","bennischwerdtner.typepi.firefly/norm"],"sourcesContent":["(ns bennischwerdtner.typepi.firefly\n  (:require [bennischwerdtner.typepi.lib :as lib]))\n\n(defn firefly\n  [{:keys [pos] [x y] :pos}]\n  [:div\n   {:class (css :absolute\n                :p-2\n                ;; {:height \"1rem\" :width \"2.5rem\"}\n                :min-w-0\n                :text-center :text-black\n                :rounded-full \"c-background-success\")\n    :style {:left x :top y}}])\n\n(defn update-firefly\n  [e state]\n  (let [reached-target? (< (distance (:pos e)\n                                     (:green-points-position\n                                      state))\n                           40)]\n    (when reached-target?\n      (set-wobble-anim!)\n      (when (< 300 (age e))\n        (play-sound! \"757612__qubodup__pop-sound.wav\" 0.5))\n      (swap! points update :green inc))\n    (cond-> e\n      (< 500 (age e) 1000) (attracted \"green-points\" 0.5)\n      (< 1000 (age e)) (attracted \"green-points\" 0.4)\n      reached-target? (assoc :kill? true))))\n\n(defn spawn-firefly!\n  []\n  (set-blink-anim!)\n  (play-sound! \"plop.mp3\" 1)\n  (swap! game-state update\n         :entities\n         (fn [ents]\n           (into ents\n                 (repeatedly\n                  1\n                  (fn []\n                    (->entity\n                     {:firefly? true\n                      :forces {:gravity [0\n                                         (+ 0.1 (rand 0.05))]}\n                      :kinetic-energy 100\n                      :pos (rand-on-element \"number-text\")\n                      :velocity [(norm 0 6000)\n                                 (norm -1000 1000)]})))))))\n"]}